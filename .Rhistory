shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
install.packages("shinyEffects")
runApp()
library(tidyverse)
library(pdftools)
raw_pdf <- pdf_text("bancos/pdf/2020_04_23_boletim_covid_sms_32.pdf") %>%
map(strsplit, split="\r\n") %>%
map(map, str_squish)
primeira <- 15 # selecionar página do pdf q inicia o banco
raw_pdf <- raw_pdf[primeira:length(raw_pdf)]
raw_pdf[[1]][[1]] <- raw_pdf[[1]][[1]][-c(1:3)] # tirando as duas primeiras linhas(verificar se são só duas msm)
ultimas <- c((length(raw_pdf[[length(raw_pdf)]][[1]])-1):length(raw_pdf[[length(raw_pdf)]][[1]]))
raw_pdf[[length(raw_pdf)]][[1]] <- raw_pdf[[length(raw_pdf)]][[1]][-c(ultimas)] # tirando as duas últimas linhas
raw_pdf[[1]][[1]]
leitura <- function(x){
x <- x[-length(x)] # sempre verificar se é preciso esse código(muitas vzs n é pra rodar)
dados <- tibble(.rows = length(x))
dados$id <- ifelse(test = str_detect(x,"^\\d"),
yes = str_extract(x,"^\\d+"),
NA)
dados$data <- ifelse(test = str_detect(x,"^\\d"),
yes = str_extract(str_trim(str_remove(x,"^\\d+")),"^.*?\\s"),
no = NA)
dados$sexo <- ifelse(test = str_detect(x,"^\\d"),
yes = str_extract(str_trim(str_remove(str_trim(str_remove(x,"^...")),"^.*?\\s")),"^."),
no = NA)
dados$idade <- ifelse(test = str_detect(x,"^\\d"),
yes = str_extract(str_trim(str_remove(str_trim(str_remove(x,"^...")),"^.*?\\s")),"\\d+"),
no = NA)
dados$fonte <- ifelse(test = str_detect(x,"^\\d"),
yes = str_trim(str_remove(str_trim(str_remove(str_trim(str_remove(str_trim(str_remove(x,"^...")),"^.*?\\s")),"^.")), "^.*?\\s")),
no = x)
return(dados)
}
dados <- raw_pdf %>%
map(map, leitura) %>%
unlist(recursive = FALSE) %>%
bind_rows()
for (i in 1:length(dados$id)) {
if(is.na(dados$id[i])){
dados$fonte[i+1] <- str_c(dados$fonte[i], " ", dados$fonte[i+1])
}
}
dados <- dados %>%
filter(!is.na(id)) %>%
mutate(fonte = ifelse(fonte=="NI", NA, fonte)) %>%
mutate(sexo = ifelse((sexo=="F"|sexo=="M"),sexo, NA)) %>%
mutate(fonte = ifelse(fonte == "RS", "COE RS", fonte)) %>%
mutate(fonte = ifelse(fonte == "Secretaria Municipal de Saude de Porto legre", "Secretaria Municipal de Saude de Porto Alegre", fonte)) %>%
mutate(fonte = ifelse(fonte == "de Saude Morro Santana", "Unidade de Saude Morro Santana", fonte)) %>%
mutate(fonte = ifelse(fonte == "PORTO ALEGRE", "SMS PORTO ALEGRE", fonte)) %>%
mutate(fonte = ifelse(fonte == "29 ASSOCIACAO HOSPITALAR VILA NOVA", "ASSOCIACAO HOSPITALAR VILA NOVA", fonte)) %>%
mutate(fonte = ifelse(fonte == "30", NA, fonte))
lbl <- levels(as.factor(dados$fonte))
lvl <- c("unidade_de_saude_iapi","associacao_hospitalar_vila_nova","unidade_de_saude_iapi","centro_de_operacoes_de_emergencias_rs","consultorio_privado","laboratorio_endocrimeta","equipe_de_vigilância_de_doencas_transmissiveis","hospital_conceicao",
"hospital_da_brigada_militar","hospital_da_brigada_militar","hospital_da_brigada_militar","hospital_de_clinicas_de_porto_alegre",
"hospital_de_clinicas_de_porto_alegre","hospital_de_clinicas_de_porto_alegre","hospital_de_clinicas_de_porto_alegre","hospital_divina_providencia","hospital_divina_providencia",
"hospital_ernesto_dornelles","hospital_geral_de_porto_alegre","hospital_geral_de_porto_alegre","hospital_mae_de_deus","hospital_moinhos_de_vento",
"hospital_conceicao","hospital_conceicao","hospital_conceicao","hospital_porto_alegre","hospital_restinga_extremo_sul","hospital_sao_lucas",
"hospital_sao_lucas","hospital_sao_lucas","hospital_sao_lucas","hospital_univesitario_de_pelotas","hospital_univesitario_de_pelotas","hospital_santa_casa","hospital_santa_casa",
"laboratorio_endocrimeta","laboratorio_analysis","laboratorio_endocrimeta","laboratorio_fleury","laboratorio_pardini","pronto_atendimento_cruzeiro_do_sul","secretaria_municipal_de_saude_porto_alegre",
"secretaria_municipal_da_saude_de_sao_leopoldo","unidade_de_saude_iapi","unidade_de_saude_jardim_itu","unidade_de_saude_modelo",
"unidade_de_saude_morro_santana","unidade_de_saude_nova_brasilia","unidade_de_saude_santa_maria","unidade_de_saude_sesc","unidade_de_saude_tristeza","unimed","unidade_de_pronto_atendimento_zona_norte","unidade_de_saude_torres", "unidade_de_saude_guaruja","unidade_de_saude_iapi",
"unidade_de_saude_navegantes","unidade_de_saude_nonoai", "unidade_de_saude_santa_cecilia","vigilicancia_em_saude_sms_novo_hamburgo")
View(cbind(lbl,lvl))
library(tidyverse)
leitos_antigos <- read_csv("bancos/leitos/leitos_poa_22_04.csv")
emergencias_adulto <- tibble(
local = c("hospital_de_clinicas_de_porto_alegre","hospital_conceicao","instituto_de_cardiologia",
"hospital_santa_casa","hospital_sao_lucas","hospital_restinga_extremo_sul","hospital_vila_nova",
"pronto_atendimento_bom_jesus","pronto_atendimento_cruzeiro_do_sul","pronto_atendimento_lomba_do_pinheiro",
"unidade_de_pronto_atendimento_zona_norte"),
leitos = c(41,64,21,24,17,18,26,7,12,9,17),
internados = c(31,49,19,14,13,5,9,6,11,4,13),
data_atualizacao = rep("23-04-2020",11)
)
emergencias_pedia <- tibble(local = c("hospital_de_clinicas_de_porto_alegre","hospital_conceicao","hospital_santa_casa","hospital_sao_lucas",
"hospital_materno_infantil_presidente_vargas","hospital_restinga_extremo_sul",
"pronto_atendimento_bom_jesus","pronto_atendimento_cruzeiro_do_sul","pronto_atendimento_lomba_do_pinheiro"),
leitos = c(9,16,11,4,9,6,5,9,4),
internados = c(1,5,2,2,2,1,0,0,0),
data_atualizacao = rep("23-04-2020",9))
locais <- c("centro_de_operacoes_de_emergencias_rs","consultorio_privado","equipe_de_vigilância_de_doencas_transmissiveis",
"hospital_conceicao","hospital_de_clinicas_de_porto_alegre","hospital_divina_providencia","hospital_ernesto_dornelles",
"hospital_mae_de_deus","hospital_moinhos_de_vento","hospital_restinga_extremo_sul","hospital_santa_casa","hospital_sao_lucas","paciente",
"pronto_atendimento_cruzeiro_do_sul", "secretaria_municipal_da_saude_de_sao_leopoldo","unidade_de_pronto_atendimento_zona_norte",
"unidade_de_saude_guaruja", "unidade_de_saude_iapi","unidade_de_saude_modelo","unidade_de_saude_nonoai",
"unidade_de_saude_santa_cecilia", "unidade_de_saude_torres","unimed","hospital_cristo_redentor","hospital_de_pronto_socorro",
"hospital_femina","hospital_independencia","hospital_materno_infantil_presidente_vargas","hospital_santa_ana",
"hospital_vila_nova","instituto_de_cardiologia","pronto_atendimento_bom_jesus","pronto_atendimento_lomba_do_pinheiro")
latitude <- c(-30.030921,NA,-30.062808,-30.015870,-30.038435,-30.084428,-30.047509,-30.058845,-30.025520,-30.142524,-30.030803,
-30.055122,NA,-30.069603,NA,-30.009546,-30.154413,-30.014581,-30.043194,-30.090800,-30.038625,NA,-30.037586,
-30.010102,-30.036874,-30.029239,-30.061051,-30.029525,-30.086664,-30.119308,-30.049092,-30.043194,-30.110731)
longitude <- c(-51.227923,NA,-51.231179,-51.158236,-51.206637,-51.188390,-51.212131,-51.228945,-51.208420,-51.128803,-51.221512,
-51.173819,NA,-51.216537,NA,-51.146056,-51.222489,-51.177908,-51.213917,-51.216208,-51.205120,NA,-51.210648,
-51.159260,-51.209282,-51.206848,-51.149073,-51.214865,-51.206890,-51.207744,-51.209030,-51.153916,-51.110188)
lat_long <- tibble(
local = locais,
lat = latitude,
long = longitude
)
emergencias_adulto <- left_join(emergencias_adulto, lat_long, by = "local")
emergencias_pedia <- left_join(emergencias_pedia, lat_long, by = "local")
uti_adulto <- tibble(local = c("hospital_conceicao","hospital_de_clinicas_de_porto_alegre","hospital_santa_casa","hospital_sao_lucas",
"hospital_cristo_redentor","hospital_moinhos_de_vento","hospital_ernesto_dornelles","hospital_vila_nova",
"hospital_de_pronto_socorro","hospital_independencia","hospital_femina","hospital_divina_providencia",
"hospital_restinga_extremo_sul","hospital_santa_ana","hospital_mae_de_deus"),
leitos = c(69,82,87,59,47,56,20,20,20,10,4,16,10,10,50),
internados = c(57,44,71,34,24,51,13,17,11,10,1,12,10,9,33),
covid = c(7,3,0,2,0,14,2,0,0,0,0,2,0,0,3),
data_atualizacao = rep("23-04-2020",15))
uti_pedia <- tibble(local = c("hospital_santa_casa","hospital_sao_lucas","hospital_de_clinicas_de_porto_alegre",
"hospital_de_pronto_socorro","hospital_moinhos_de_vento",
"hospital_conceicao","hospital_materno_infantil_presidente_vargas"),
leitos = c(37,12,13,8,11,18,6),
internados = c(33,5,10,2,8,10,4),
covid = c(0,0,0,0,0,0,0),
data_atualizacao = rep("23-04-2020",7))
uti_adulto <- left_join(uti_adulto, lat_long, by = "local")
uti_pedia <- left_join(uti_pedia, lat_long, by = "local")
leitos_novos <- tibble(
tipo = c(rep("emergencia", nrow(emergencias_adulto)+nrow(emergencias_pedia)),rep("uti",nrow(uti_adulto)+nrow(uti_pedia))),
classe = c(rep("adulto", nrow(emergencias_adulto)), rep("pediatrico", nrow(emergencias_pedia)), rep("adulto", nrow(uti_adulto)), rep("pediatrico", nrow(uti_pedia)))
)
aux <- bind_rows(emergencias_adulto,emergencias_pedia,uti_adulto, uti_pedia)
leitos_novos <- bind_cols(leitos_novos,aux)
leitos_novos$data_atualizacao <- as.Date(leitos_novos$data_atualizacao, "%d-%m-%Y")
lbl <- levels(as.factor(leitos_novos$local))
lvl <- c("Hospital Conceição","Hospital Cristo Redentor","HCPA","HPS","Hospital Divina Providência","Hospital Ernesto Dornelles",
"Hospital Femina","HospitaL Independência","Hospital Mãe de Deus","HMIPV","Hospital Moinhos de Vento","Hospital Restinga",
"Hospital Santa Ana","Hospital Santa Casa","Hospital São Lucas","Hospital Vila Nova","Instituto de Cardiologia","PA Bom Jesus",
"PA Cruzeiro do Sul","PA Lomba do Pinheiro","UPA Zona Norte")
View(cbind(lbl,lvl))
raw_pdf <- pdf_text("bancos/pdf/2020_04_24_boletim_covid_sms_33.pdf") %>%
map(strsplit, split="\r\n") %>%
map(map, str_squish)
primeira <- 15 # selecionar página do pdf q inicia o banco
raw_pdf <- raw_pdf[primeira:length(raw_pdf)]
raw_pdf[[1]][[1]] <- raw_pdf[[1]][[1]][-c(1:3)] # tirando as duas primeiras linhas(verificar se são só duas msm)
ultimas <- c((length(raw_pdf[[length(raw_pdf)]][[1]])-1):length(raw_pdf[[length(raw_pdf)]][[1]]))
raw_pdf[[length(raw_pdf)]][[1]] <- raw_pdf[[length(raw_pdf)]][[1]][-c(ultimas)] # tirando as duas últimas linhas
raw_pdf[[1]][[1]]
leitura <- function(x){
x <- x[-length(x)] # sempre verificar se é preciso esse código(muitas vzs n é pra rodar)
dados <- tibble(.rows = length(x))
dados$id <- ifelse(test = str_detect(x,"^\\d"),
yes = str_extract(x,"^\\d+"),
NA)
dados$data <- ifelse(test = str_detect(x,"^\\d"),
yes = str_extract(str_trim(str_remove(x,"^\\d+")),"^.*?\\s"),
no = NA)
dados$sexo <- ifelse(test = str_detect(x,"^\\d"),
yes = str_extract(str_trim(str_remove(str_trim(str_remove(x,"^...")),"^.*?\\s")),"^."),
no = NA)
dados$idade <- ifelse(test = str_detect(x,"^\\d"),
yes = str_extract(str_trim(str_remove(str_trim(str_remove(x,"^...")),"^.*?\\s")),"\\d+"),
no = NA)
dados$fonte <- ifelse(test = str_detect(x,"^\\d"),
yes = str_trim(str_remove(str_trim(str_remove(str_trim(str_remove(str_trim(str_remove(x,"^...")),"^.*?\\s")),"^.")), "^.*?\\s")),
no = x)
return(dados)
}
dados <- raw_pdf %>%
map(map, leitura) %>%
unlist(recursive = FALSE) %>%
bind_rows()
for (i in 1:length(dados$id)) {
if(is.na(dados$id[i])){
dados$fonte[i+1] <- str_c(dados$fonte[i], " ", dados$fonte[i+1])
}
}
dados <- dados %>%
filter(!is.na(id)) %>%
mutate(fonte = ifelse(fonte=="NI", NA, fonte)) %>%
mutate(sexo = ifelse((sexo=="F"|sexo=="M"),sexo, NA)) %>%
mutate(fonte = ifelse(fonte == "RS", "COE RS", fonte)) %>%
mutate(fonte = ifelse(fonte == "Secretaria Municipal de Saude de Porto legre", "Secretaria Municipal de Saude de Porto Alegre", fonte)) %>%
mutate(fonte = ifelse(fonte == "de Saude Morro Santana", "Unidade de Saude Morro Santana", fonte)) %>%
mutate(fonte = ifelse(fonte == "PORTO ALEGRE", "SMS PORTO ALEGRE", fonte)) %>%
mutate(fonte = ifelse(fonte == "29 ASSOCIACAO HOSPITALAR VILA NOVA", "ASSOCIACAO HOSPITALAR VILA NOVA", fonte)) %>%
mutate(fonte = ifelse(fonte == "30", NA, fonte))
lbl <- levels(as.factor(dados$fonte))
lvl <- c("unidade_de_saude_iapi","associacao_hospitalar_vila_nova","unidade_de_saude_iapi","centro_de_operacoes_de_emergencias_rs","consultorio_privado","laboratorio_endocrimeta","equipe_de_vigilância_de_doencas_transmissiveis","hospital_conceicao",
"hospital_da_brigada_militar","hospital_da_brigada_militar","hospital_da_brigada_militar","hospital_de_clinicas_de_porto_alegre",
"hospital_de_clinicas_de_porto_alegre","hospital_de_clinicas_de_porto_alegre","hospital_de_clinicas_de_porto_alegre","hospital_divina_providencia","hospital_divina_providencia",
"hospital_ernesto_dornelles","hospital_geral_de_porto_alegre","hospital_geral_de_porto_alegre","hospital_mae_de_deus","hospital_moinhos_de_vento",
"hospital_conceicao","hospital_conceicao","hospital_conceicao","hospital_porto_alegre","hospital_restinga_extremo_sul","hospital_sao_lucas",
"hospital_sao_lucas","hospital_sao_lucas","hospital_sao_lucas","hospital_univesitario_de_pelotas","hospital_univesitario_de_pelotas","hospital_santa_casa","hospital_santa_casa",
"laboratorio_endocrimeta","laboratorio_analysis","laboratorio_endocrimeta","laboratorio_fleury","laboratorio_pardini","pronto_atendimento_cruzeiro_do_sul","secretaria_municipal_de_saude_porto_alegre",
"secretaria_municipal_da_saude_de_sao_leopoldo","unidade_de_saude_iapi","unidade_de_saude_jardim_itu","unidade_de_saude_modelo",
"unidade_de_saude_morro_santana","unidade_de_saude_nova_brasilia","unidade_de_saude_santa_maria","unidade_de_saude_sesc","unidade_de_saude_tristeza","unimed","unidade_de_pronto_atendimento_zona_norte","unidade_de_saude_torres", "unidade_de_saude_guaruja","unidade_de_saude_iapi",
"unidade_de_saude_navegantes","unidade_de_saude_nonoai", "unidade_de_saude_santa_cecilia","vigilicancia_em_saude_sms_novo_hamburgo")
View(cbind(lbl,lvl))
dados$fonte <- plyr::mapvalues(dados$fonte, from = lbl, to = lvl)
levels(as.factor(dados$fonte))
locais <- c("centro_de_operacoes_de_emergencias_rs","consultorio_privado","equipe_de_vigilância_de_doencas_transmissiveis",
"hospital_conceicao","hospital_de_clinicas_de_porto_alegre","hospital_divina_providencia","hospital_ernesto_dornelles",
"hospital_mae_de_deus","hospital_moinhos_de_vento","hospital_restinga_extremo_sul","hospital_santa_casa","hospital_sao_lucas","paciente",
"pronto_atendimento_cruzeiro_do_sul", "secretaria_municipal_da_saude_de_sao_leopoldo","unidade_de_pronto_atendimento_zona_norte",
"unidade_de_saude_guaruja", "unidade_de_saude_iapi","unidade_de_saude_modelo","unidade_de_saude_nonoai",
"unidade_de_saude_santa_cecilia", "unidade_de_saude_torres","unimed","hospital_cristo_redentor","hospital_de_pronto_socorro",
"hospital_femina","hospital_independencia","hospital_materno_infantil_presidente_vargas","hospital_santa_ana",
"hospital_vila_nova","instituto_de_cardiologia","pronto_atendimento_bom_jesus","pronto_atendimento_lomba_do_pinheiro",
"secretaria_municipal_de_saude_porto_alegre","unidade_de_saude_sesc","unidade_de_saude_jardim_itu","unidade_de_saude_morro_santana",
"hospital_univesitario_de_pelotas","laboratorio_analysis","hospital_da_brigada_militar","laboratorio_endocrimeta",
"vigilicancia_em_saude_sms_novo_hamburgo","unidade_de_saude_santa_maria","unidade_de_saude_tristeza","unidade_de_saude_navegantes",
"hospital_geral_de_porto_alegre","associacao_hospitalar_vila_nova","hospital_santa_cruz","laboratorio_pardini",
"laboratorio_fleury","unidade_de_saude_nova_brasilia","hospital_porto_alegre")
latitude <- c(-30.030921,NA,-30.062808,-30.015870,-30.038435,-30.084428,-30.047509,-30.058845,-30.025520,-30.142524,-30.030803,
-30.055122,NA,-30.069603,NA,-30.009546,-30.154413,-30.014581,-30.043194,-30.090800,-30.038625,NA,-30.037586,
-30.010102,-30.036874,-30.029239,-30.061051,-30.029525,-30.086664,-30.119308,-30.049092,-30.043194,-30.110731,
-30.035226,-30.035875,-30.023790,-30.039581,NA,-29.994899,-30.097930,-30.029324,NA,NA,-30.1110803,-30.0000107,
-30.0189824,-30.1184035,NA,-30.008845,NA,-29.9822051,-30.0447464)
longitude <- c(-51.227923,NA,-51.231179,-51.158236,-51.206637,-51.188390,-51.212131,-51.228945,-51.208420,-51.128803,-51.221512,
-51.173819,NA,-51.216537,NA,-51.146056,-51.222489,-51.177908,-51.213917,-51.216208,-51.205120,NA,-51.210648,
-51.159260,-51.209282,-51.206848,-51.149073,-51.214865,-51.206890,-51.207744,-51.209030,-51.153916,-51.110188,
-51.221475,-51.148588,-51.142576,-51.128412,NA,-51.129390,-51.251136,-51.222498,NA,NA,-51.2568017,-51.2022416,
-51.1945255,-51.2084237,NA,-51.1956356,NA,-51.1362364,-51.2185621)
lat_long <- tibble(
local = locais,
lat = latitude,
long = longitude
)
dados <- left_join(dados, lat_long, by = c("fonte" = "local"))
dados$idade <- as.numeric(dados$idade)
dados$faixa_etaria[dados$idade < 10] <- "0-9"
dados$faixa_etaria[dados$idade < 20 & dados$idade >= 10] <- "10-19"
dados$faixa_etaria[dados$idade < 30 & dados$idade >= 20] <- "20-29"
dados$faixa_etaria[dados$idade < 40 & dados$idade >= 30] <- "30-39"
dados$faixa_etaria[dados$idade < 50 & dados$idade >= 40] <- "40-49"
dados$faixa_etaria[dados$idade < 60 & dados$idade >= 50] <- "50-59"
dados$faixa_etaria[dados$idade < 70 & dados$idade >= 60] <- "60-69"
dados$faixa_etaria[dados$idade < 80 & dados$idade >= 70] <- "70-79"
dados$faixa_etaria[dados$idade >= 80] <- "Mais de 80"
dados$data <- as.Date(dados$data, "%d/%m/%Y")
lbl <- levels(as.factor(dados$fonte))
lvl <- c("Hospital Vila Nova","COE RS", "Consultório Privado", "EVDT/DGVS", "Hospital Conceição","Hospital da Brigada Militar", "HCPA",
"Hospital Divina Providência","Hospital Ernesto Dornelles", "HMAPA","Hospital Mãe de Deus","Hospital Moinhos de Vento","Hospital Porto Alegre",
"Hospital Restinga", "Hospital Santa Casa","Hospital São Lucas","Hospital Universitário de Pelotas",
"Laboratório Analysis","Laboratório Endocrimeta","Laboratório Pardini","Laboratório Fleury","PA Cruzeiro do Sul","SMS São Leopoldo","SMS Porto Alegre",
"UPA Zona Norte","US Guarujá","US Iapi","US Jardim Itu","US Modelo","US Morro Santana","US Navegantes","US Nonoai",
"US Nova Brasília","US Santa Cecília","US Santa Maria","US SESC","US Torres","US Tristeza","Unimed","SMS Novo Hamburgo")
View(cbind(lbl,lvl))
dados$fonte <- plyr::mapvalues(dados$fonte, from = lbl, to = lvl)
write_csv(dados, "bancos/covid/dados_covid_poa_24_04.csv")
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
library(shiny)
library(ggplot2)
#############################################################pacotes da leitura do mapa
library(tidyverse)
library(sf)
library(stringr)
library(readxl)
library(leaflet)
library(RColorBrewer)
library(DT)
library(leafpop)
library(readxl)
library(rgeos) #https://statistique-et-logiciel-r.com/premiers-pas-en-cartographie-avec-r/
library(viridis)
library(rainbow)
library(httr)
library(curl)
library(abjutils)
library(shinydashboard)
library(shinydashboardPlus)
library(plotly)
library(scales)
library(lubridate)
library(shinyEffects)
library(shinyalert)
library(shinyBS)
source("criando_banco_covid_2.0.R")
library(tidyverse)
library(httr)
library(lubridate)
dados_ses <- NULL
dados_ses <- try(read_csv2("http://ti.saude.rs.gov.br/covid19/download",
locale = readr::locale(encoding = "latin1")))
path <- "http://ti.saude.rs.gov.br/covid19/download"
request <- GET(url = path)
if(request$status_code == 404) {
dados_ses <- read_csv("bancos/covid/ses_reserva.csv")
} else {
write_csv(dados_ses,"bancos/covid/ses_reserva.csv")
}
names(dados_ses) <- c("codigo_ibge_6_digitos","municipio","codigo_regiao_covid","regiao_covid",
"sexo","faixa_etaria","tipo_teste",
"data_confirmacao","data_sintomas","data_evolucao","evolucao","hospitalizacao",
"sintoma_febre","sintoma_tosse",
"sintoma_garganta","sintoma_dispneia","sintomas_outros","comorbidades",
"data_inclusao_obito","data_evolucao_estimada","raca_cor")
dados_covid_poa <- dados_ses %>%
mutate(data_confirmacao = as_date(data_confirmacao, format = "%d/%m/%y"),
data_sintomas = as_date(data_sintomas, format = "%d/%m/%y"),
data_evolucao = as_date(data_evolucao, format = "%d/%m/%y"),
municipio = str_to_title(municipio))
runApp()
library(tidyverse)
library(httr)
library(lubridate)
dados_ses <- NULL
dados_ses <- try(read_csv2("http://ti.saude.rs.gov.br/covid19/download",
locale = readr::locale(encoding = "latin1")))
path <- "http://ti.saude.rs.gov.br/covid19/download"
request <- GET(url = path)
if(request$status_code == 404) {
dados_ses <- read_csv("bancos/covid/ses_reserva.csv")
} else {
write_csv(dados_ses,"bancos/covid/ses_reserva.csv")
}
names(dados_ses) <- c("codigo_ibge_6_digitos","municipio","codigo_regiao_covid","regiao_covid",
"sexo","faixa_etaria","tipo_teste",
"data_confirmacao","data_sintomas","data_evolucao","evolucao","hospitalizacao",
"sintoma_febre","sintoma_tosse",
"sintoma_garganta","sintoma_dispneia","sintomas_outros","comorbidades",
"data_inclusao_obito","data_evolucao_estimada","raca_cor")
dados_covid_poa <- dados_ses %>%
mutate(data_confirmacao = as_date(data_confirmacao, format = "%d/%m/%y"),
data_sintomas = as_date(data_sintomas, format = "%d/%m/%y"),
data_evolucao = as_date(data_evolucao, format = "%d/%m/%y"),
municipio = str_to_title(municipio))
View(dados_ses)
dados_covid_poa <- dados_ses %>%
mutate(data_confirmacao = as_date(data_confirmacao, format = "%d/%m/%y"))
dados_covid_poa <- dados_ses %>%
mutate(municipio = str_to_title(municipio))
dados_covid_poa <- dados_ses
dados_covid_poa <- dados_ses %>%
mutate(data_confirmacao2 = as_date(data_confirmacao, format = "%d/%m/%y"))
Can't bind data because all arguments must be named
names(dados_ses)
names(dados_ses) <- c("codigo_ibge_6_digitos","municipio","codigo_regiao_covid","regiao_covid",
"sexo","faixa_etaria","tipo_teste",
"data_confirmacao","data_sintomas","data_evolucao","evolucao","hospitalizacao",
"sintoma_febre","sintoma_tosse",
"sintoma_garganta","sintoma_dispneia","sintomas_outros","comorbidades",
"data_inclusao_obito","data_evolucao_estimada","raca_cor", "nao_sei_o_que_e")
dados_covid_poa <- dados_ses %>%
mutate(data_confirmacao2 = as_date(data_confirmacao, format = "%d/%m/%y"),
data_sintomas = as_date(data_sintomas, format = "%d/%m/%y"),
data_evolucao = as_date(data_evolucao, format = "%d/%m/%y"),
municipio = str_to_title(municipio))
dados_covid_poa[dados_covid_poa$municipio=="Westfalia","municipio"] <- "Westfália"
dados_covid_poa[dados_covid_poa$municipio=="Vespasiano Correa","municipio"] <- "Vespasiano Corrêa"
dados_covid_poa[dados_covid_poa$municipio=="Santana Do Livramento","municipio"] <- "Sant'ana Do Livramento"
dados_covid_poa <- dados_covid_poa %>%
filter(municipio == "Porto Alegre") %>%
mutate(populacao_estimada = 1483771) %>%
select(-c(codigo_ibge_6_digitos,codigo_regiao_covid,regiao_covid))
dados_covid_poa <- dados_covid_poa %>%
mutate(data_evolucao = ifelse(evolucao == "RECUPERADO", ifelse(is.na(data_evolucao),data_sintomas+days(14),data_evolucao),data_evolucao)) %>%
mutate(data_evolucao = as_date(data_evolucao))
semana <- read_csv("bancos/semana_epidemio_dia.csv")
dados_covid_poa <- dados_covid_poa %>%
left_join(semana, by = c("data_confirmacao" = "dia")) %>%
mutate(semana_epidemiologica_confirmacao = semana_epidemiologica) %>%
select(-semana_epidemiologica) %>%
left_join(semana, by = c("data_sintomas" = "dia")) %>%
mutate(semana_epidemiologica_sintomas = semana_epidemiologica) %>%
select(-semana_epidemiologica) %>%
left_join(semana, by = c("data_evolucao" = "dia")) %>%
mutate(semana_epidemiologica_evolucao = semana_epidemiologica) %>%
select(-semana_epidemiologica)
rm(list=setdiff(ls(),c("dados_covid_poa")))
runApp()
View(dados_covid_poa)
names(dados_covid_poa)
runApp()
View(dados_covid_poa)
names(dados_covid_poa)
dados <- read_csv("bancos/covid/dados_covid_poa_11_05.csv")
names(dados)
View(dados)
library(tidyverse)
library(httr)
library(lubridate)
library(httr)
library(jsonlite)
dados_ses <- NULL
path <- "http://ti.saude.rs.gov.br/covid19/download"
request <- try(GET(url = path))
if(class(request) == "try-error") {
dados_ses <- read_csv("bancos/covid/ses_reserva.csv")
} else if(request$status_code == 404){
dados_ses <- read_csv("bancos/covid/ses_reserva.csv")
} else {
dados_ses <- read_csv2("http://ti.saude.rs.gov.br/covid19/download",
locale = readr::locale(encoding = "latin1"))
write_csv(dados_ses,"bancos/covid/ses_reserva.csv")
}
names(dados_ses) <- c("codigo_ibge_6_digitos","municipio","codigo_regiao_covid","regiao_covid",
"sexo","faixa_etaria","tipo_teste",
"data_confirmacao","data_sintomas","data_evolucao","evolucao","hospitalizacao",
"sintoma_febre","sintoma_tosse",
"sintoma_garganta","sintoma_dispneia","sintomas_outros","comorbidades",
"data_inclusao_obito","data_evolucao_estimada","raca_cor")
dados_covid_poa <- dados_ses %>%
mutate(data_confirmacao = as_date(data_confirmacao, format = "%d/%m/%y"),
data_sintomas = as_date(data_sintomas, format = "%d/%m/%y"),
data_evolucao = as_date(data_evolucao, format = "%d/%m/%y"),
municipio = str_to_title(municipio))
names(dados_ses) <- c("codigo_ibge_6_digitos","municipio","codigo_regiao_covid","regiao_covid",
"sexo","faixa_etaria","tipo_teste",
"data_confirmacao","data_sintomas","data_evolucao","evolucao","hospitalizacao",
"sintoma_febre","sintoma_tosse",
"sintoma_garganta","sintoma_dispneia","sintomas_outros","comorbidades",
"data_inclusao_obito","data_evolucao_estimada","raca_cor", "nao_sei_o_que_e")
dados_covid_poa <- dados_ses %>%
mutate(data_confirmacao = as_date(data_confirmacao, format = "%d/%m/%y"),
data_sintomas = as_date(data_sintomas, format = "%d/%m/%y"),
data_evolucao = as_date(data_evolucao, format = "%d/%m/%y"),
municipio = str_to_title(municipio))
dados_covid_poa[dados_covid_poa$municipio=="Westfalia","municipio"] <- "Westfália"
dados_covid_poa[dados_covid_poa$municipio=="Vespasiano Correa","municipio"] <- "Vespasiano Corrêa"
dados_covid_poa[dados_covid_poa$municipio=="Santana Do Livramento","municipio"] <- "Sant'ana Do Livramento"
dados_covid_poa <- dados_covid_poa %>%
filter(municipio == "Porto Alegre") %>%
mutate(populacao_estimada = 1483771) %>%
select(-c(codigo_ibge_6_digitos,codigo_regiao_covid,regiao_covid))
dados_covid_poa <- dados_covid_poa %>%
mutate(data_evolucao = ifelse(evolucao == "RECUPERADO", ifelse(is.na(data_evolucao),data_sintomas+days(14),data_evolucao),data_evolucao)) %>%
mutate(data_evolucao = as_date(data_evolucao))
semana <- read_csv("bancos/semana_epidemio_dia.csv")
dados_covid_poa <- dados_covid_poa %>%
left_join(semana, by = c("data_confirmacao" = "dia")) %>%
mutate(semana_epidemiologica_confirmacao = semana_epidemiologica) %>%
select(-semana_epidemiologica) %>%
left_join(semana, by = c("data_sintomas" = "dia")) %>%
mutate(semana_epidemiologica_sintomas = semana_epidemiologica) %>%
select(-semana_epidemiologica) %>%
left_join(semana, by = c("data_evolucao" = "dia")) %>%
mutate(semana_epidemiologica_evolucao = semana_epidemiologica) %>%
select(-semana_epidemiologica)
View(dados_covid_poa)
uti <- NULL
path <- "https://infografico-covid-api.procempa.com.br/infograficocovid/api/v1/download/saude"
request <- try(GET(url = path))
if(class(request) == "try-error") {
uti <- read_csv("bancos/leitos/banco_uti_reserva.csv")
} else if(request$status_code == 404){
uti <- read_csv("bancos/leitos/banco_uti_reserva.csv")
} else {
temp <- tempfile()
download.file("https://infografico-covid-api.procempa.com.br/infograficocovid/api/v1/download/saude", temp, mode = "wb")
uti <- read_csv2(unz(temp, "leitos_uti.csv"), locale = readr::locale(encoding = "latin1"))
unlink(temp)
write_csv(uti,"bancos/leitos/banco_uti_reserva.csv")
}
names(uti) <- c("local","tipo","data_atualizacao","leitos_total","leitos_bloqueados","leitos_ocupados",
"leitos_covid_suspeito","leitos_covid")
uti <- uti %>%
mutate(data_atualizacao = as_date(data_atualizacao, format = "%d/%m/%Y"))
teste <- uti %>%
filter(data_atualizacao == max(data_atualizacao))
semana_epidemio <- read_csv("bancos/semana_epidemio_dia.csv")
leitos <- bind_rows(leitos_antigos,leitos_novos) %>%
left_join(semana_epidemio, by = c("data_atualizacao" = "dia"))
View(dados_covid_poa)
runApp()
shiny::runApp()
names(ses_reserva)
View(mapa_poa)
names(mapa_poa)
mapa_poa$DATA_EDICA
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
