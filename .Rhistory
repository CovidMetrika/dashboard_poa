dados$faixa_etaria[dados$idade < 70 & dados$idade >= 60] <- "60-69"
dados$faixa_etaria[dados$idade < 80 & dados$idade >= 70] <- "70-79"
dados$faixa_etaria[dados$idade >= 80] <- "Mais de 80"
dados$data <- as.Date(dados$data, "%d/%m/%Y")
lbl <- levels(as.factor(dados$fonte))
lvl <- c("Hospital Vila Nova","COE RS", "Consultório Privado", "EVDT/DGVS", "Hospital Conceição","Hospital da Brigada Militar", "HCPA",
"Hospital Divina Providência","Hospital Ernesto Dornelles", "HMAPA","Hospital Mãe de Deus","Hospital Moinhos de Vento","Hospital Porto Alegre",
"Hospital Restinga", "Hospital Santa Casa","Hospital São Lucas","Hospital Universitário de Pelotas",
"Laboratório Analysis","Laboratório Endocrimeta","Laboratório Pardini","Laboratório Fleury","PA Cruzeiro do Sul","SMS São Leopoldo","SMS Porto Alegre",
"UPA Zona Norte","US Guarujá","US Iapi","US Jardim Itu","US Modelo","US Morro Santana","US Navegantes","US Nonoai",
"US Nova Brasília","US Santa Cecília","US Santa Maria","US SESC","US Torres","US Tristeza","Unimed","SMS Novo Hamburgo")
View(cbind(lbl,lvl))
dados$fonte <- plyr::mapvalues(dados$fonte, from = lbl, to = lvl)
write_csv(dados, "bancos/covid/dados_covid_poa_24_04.csv")
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
library(shiny)
library(ggplot2)
#############################################################pacotes da leitura do mapa
library(tidyverse)
library(sf)
library(stringr)
library(readxl)
library(leaflet)
library(RColorBrewer)
library(DT)
library(leafpop)
library(readxl)
library(rgeos) #https://statistique-et-logiciel-r.com/premiers-pas-en-cartographie-avec-r/
library(viridis)
library(rainbow)
library(httr)
library(curl)
library(abjutils)
library(shinydashboard)
library(shinydashboardPlus)
library(plotly)
library(scales)
library(lubridate)
library(shinyEffects)
library(shinyalert)
library(shinyBS)
source("criando_banco_covid_2.0.R")
library(tidyverse)
library(httr)
library(lubridate)
dados_ses <- NULL
dados_ses <- try(read_csv2("http://ti.saude.rs.gov.br/covid19/download",
locale = readr::locale(encoding = "latin1")))
path <- "http://ti.saude.rs.gov.br/covid19/download"
request <- GET(url = path)
if(request$status_code == 404) {
dados_ses <- read_csv("bancos/covid/ses_reserva.csv")
} else {
write_csv(dados_ses,"bancos/covid/ses_reserva.csv")
}
names(dados_ses) <- c("codigo_ibge_6_digitos","municipio","codigo_regiao_covid","regiao_covid",
"sexo","faixa_etaria","tipo_teste",
"data_confirmacao","data_sintomas","data_evolucao","evolucao","hospitalizacao",
"sintoma_febre","sintoma_tosse",
"sintoma_garganta","sintoma_dispneia","sintomas_outros","comorbidades",
"data_inclusao_obito","data_evolucao_estimada","raca_cor")
dados_covid_poa <- dados_ses %>%
mutate(data_confirmacao = as_date(data_confirmacao, format = "%d/%m/%y"),
data_sintomas = as_date(data_sintomas, format = "%d/%m/%y"),
data_evolucao = as_date(data_evolucao, format = "%d/%m/%y"),
municipio = str_to_title(municipio))
runApp()
library(tidyverse)
library(httr)
library(lubridate)
dados_ses <- NULL
dados_ses <- try(read_csv2("http://ti.saude.rs.gov.br/covid19/download",
locale = readr::locale(encoding = "latin1")))
path <- "http://ti.saude.rs.gov.br/covid19/download"
request <- GET(url = path)
if(request$status_code == 404) {
dados_ses <- read_csv("bancos/covid/ses_reserva.csv")
} else {
write_csv(dados_ses,"bancos/covid/ses_reserva.csv")
}
names(dados_ses) <- c("codigo_ibge_6_digitos","municipio","codigo_regiao_covid","regiao_covid",
"sexo","faixa_etaria","tipo_teste",
"data_confirmacao","data_sintomas","data_evolucao","evolucao","hospitalizacao",
"sintoma_febre","sintoma_tosse",
"sintoma_garganta","sintoma_dispneia","sintomas_outros","comorbidades",
"data_inclusao_obito","data_evolucao_estimada","raca_cor")
dados_covid_poa <- dados_ses %>%
mutate(data_confirmacao = as_date(data_confirmacao, format = "%d/%m/%y"),
data_sintomas = as_date(data_sintomas, format = "%d/%m/%y"),
data_evolucao = as_date(data_evolucao, format = "%d/%m/%y"),
municipio = str_to_title(municipio))
View(dados_ses)
dados_covid_poa <- dados_ses %>%
mutate(data_confirmacao = as_date(data_confirmacao, format = "%d/%m/%y"))
dados_covid_poa <- dados_ses %>%
mutate(municipio = str_to_title(municipio))
dados_covid_poa <- dados_ses
dados_covid_poa <- dados_ses %>%
mutate(data_confirmacao2 = as_date(data_confirmacao, format = "%d/%m/%y"))
Can't bind data because all arguments must be named
names(dados_ses)
names(dados_ses) <- c("codigo_ibge_6_digitos","municipio","codigo_regiao_covid","regiao_covid",
"sexo","faixa_etaria","tipo_teste",
"data_confirmacao","data_sintomas","data_evolucao","evolucao","hospitalizacao",
"sintoma_febre","sintoma_tosse",
"sintoma_garganta","sintoma_dispneia","sintomas_outros","comorbidades",
"data_inclusao_obito","data_evolucao_estimada","raca_cor", "nao_sei_o_que_e")
dados_covid_poa <- dados_ses %>%
mutate(data_confirmacao2 = as_date(data_confirmacao, format = "%d/%m/%y"),
data_sintomas = as_date(data_sintomas, format = "%d/%m/%y"),
data_evolucao = as_date(data_evolucao, format = "%d/%m/%y"),
municipio = str_to_title(municipio))
dados_covid_poa[dados_covid_poa$municipio=="Westfalia","municipio"] <- "Westfália"
dados_covid_poa[dados_covid_poa$municipio=="Vespasiano Correa","municipio"] <- "Vespasiano Corrêa"
dados_covid_poa[dados_covid_poa$municipio=="Santana Do Livramento","municipio"] <- "Sant'ana Do Livramento"
dados_covid_poa <- dados_covid_poa %>%
filter(municipio == "Porto Alegre") %>%
mutate(populacao_estimada = 1483771) %>%
select(-c(codigo_ibge_6_digitos,codigo_regiao_covid,regiao_covid))
dados_covid_poa <- dados_covid_poa %>%
mutate(data_evolucao = ifelse(evolucao == "RECUPERADO", ifelse(is.na(data_evolucao),data_sintomas+days(14),data_evolucao),data_evolucao)) %>%
mutate(data_evolucao = as_date(data_evolucao))
semana <- read_csv("bancos/semana_epidemio_dia.csv")
dados_covid_poa <- dados_covid_poa %>%
left_join(semana, by = c("data_confirmacao" = "dia")) %>%
mutate(semana_epidemiologica_confirmacao = semana_epidemiologica) %>%
select(-semana_epidemiologica) %>%
left_join(semana, by = c("data_sintomas" = "dia")) %>%
mutate(semana_epidemiologica_sintomas = semana_epidemiologica) %>%
select(-semana_epidemiologica) %>%
left_join(semana, by = c("data_evolucao" = "dia")) %>%
mutate(semana_epidemiologica_evolucao = semana_epidemiologica) %>%
select(-semana_epidemiologica)
rm(list=setdiff(ls(),c("dados_covid_poa")))
runApp()
View(dados_covid_poa)
names(dados_covid_poa)
runApp()
View(dados_covid_poa)
names(dados_covid_poa)
dados <- read_csv("bancos/covid/dados_covid_poa_11_05.csv")
names(dados)
View(dados)
library(tidyverse)
library(httr)
library(lubridate)
library(httr)
library(jsonlite)
dados_ses <- NULL
path <- "http://ti.saude.rs.gov.br/covid19/download"
request <- try(GET(url = path))
if(class(request) == "try-error") {
dados_ses <- read_csv("bancos/covid/ses_reserva.csv")
} else if(request$status_code == 404){
dados_ses <- read_csv("bancos/covid/ses_reserva.csv")
} else {
dados_ses <- read_csv2("http://ti.saude.rs.gov.br/covid19/download",
locale = readr::locale(encoding = "latin1"))
write_csv(dados_ses,"bancos/covid/ses_reserva.csv")
}
names(dados_ses) <- c("codigo_ibge_6_digitos","municipio","codigo_regiao_covid","regiao_covid",
"sexo","faixa_etaria","tipo_teste",
"data_confirmacao","data_sintomas","data_evolucao","evolucao","hospitalizacao",
"sintoma_febre","sintoma_tosse",
"sintoma_garganta","sintoma_dispneia","sintomas_outros","comorbidades",
"data_inclusao_obito","data_evolucao_estimada","raca_cor")
dados_covid_poa <- dados_ses %>%
mutate(data_confirmacao = as_date(data_confirmacao, format = "%d/%m/%y"),
data_sintomas = as_date(data_sintomas, format = "%d/%m/%y"),
data_evolucao = as_date(data_evolucao, format = "%d/%m/%y"),
municipio = str_to_title(municipio))
names(dados_ses) <- c("codigo_ibge_6_digitos","municipio","codigo_regiao_covid","regiao_covid",
"sexo","faixa_etaria","tipo_teste",
"data_confirmacao","data_sintomas","data_evolucao","evolucao","hospitalizacao",
"sintoma_febre","sintoma_tosse",
"sintoma_garganta","sintoma_dispneia","sintomas_outros","comorbidades",
"data_inclusao_obito","data_evolucao_estimada","raca_cor", "nao_sei_o_que_e")
dados_covid_poa <- dados_ses %>%
mutate(data_confirmacao = as_date(data_confirmacao, format = "%d/%m/%y"),
data_sintomas = as_date(data_sintomas, format = "%d/%m/%y"),
data_evolucao = as_date(data_evolucao, format = "%d/%m/%y"),
municipio = str_to_title(municipio))
dados_covid_poa[dados_covid_poa$municipio=="Westfalia","municipio"] <- "Westfália"
dados_covid_poa[dados_covid_poa$municipio=="Vespasiano Correa","municipio"] <- "Vespasiano Corrêa"
dados_covid_poa[dados_covid_poa$municipio=="Santana Do Livramento","municipio"] <- "Sant'ana Do Livramento"
dados_covid_poa <- dados_covid_poa %>%
filter(municipio == "Porto Alegre") %>%
mutate(populacao_estimada = 1483771) %>%
select(-c(codigo_ibge_6_digitos,codigo_regiao_covid,regiao_covid))
dados_covid_poa <- dados_covid_poa %>%
mutate(data_evolucao = ifelse(evolucao == "RECUPERADO", ifelse(is.na(data_evolucao),data_sintomas+days(14),data_evolucao),data_evolucao)) %>%
mutate(data_evolucao = as_date(data_evolucao))
semana <- read_csv("bancos/semana_epidemio_dia.csv")
dados_covid_poa <- dados_covid_poa %>%
left_join(semana, by = c("data_confirmacao" = "dia")) %>%
mutate(semana_epidemiologica_confirmacao = semana_epidemiologica) %>%
select(-semana_epidemiologica) %>%
left_join(semana, by = c("data_sintomas" = "dia")) %>%
mutate(semana_epidemiologica_sintomas = semana_epidemiologica) %>%
select(-semana_epidemiologica) %>%
left_join(semana, by = c("data_evolucao" = "dia")) %>%
mutate(semana_epidemiologica_evolucao = semana_epidemiologica) %>%
select(-semana_epidemiologica)
View(dados_covid_poa)
uti <- NULL
path <- "https://infografico-covid-api.procempa.com.br/infograficocovid/api/v1/download/saude"
request <- try(GET(url = path))
if(class(request) == "try-error") {
uti <- read_csv("bancos/leitos/banco_uti_reserva.csv")
} else if(request$status_code == 404){
uti <- read_csv("bancos/leitos/banco_uti_reserva.csv")
} else {
temp <- tempfile()
download.file("https://infografico-covid-api.procempa.com.br/infograficocovid/api/v1/download/saude", temp, mode = "wb")
uti <- read_csv2(unz(temp, "leitos_uti.csv"), locale = readr::locale(encoding = "latin1"))
unlink(temp)
write_csv(uti,"bancos/leitos/banco_uti_reserva.csv")
}
names(uti) <- c("local","tipo","data_atualizacao","leitos_total","leitos_bloqueados","leitos_ocupados",
"leitos_covid_suspeito","leitos_covid")
uti <- uti %>%
mutate(data_atualizacao = as_date(data_atualizacao, format = "%d/%m/%Y"))
teste <- uti %>%
filter(data_atualizacao == max(data_atualizacao))
semana_epidemio <- read_csv("bancos/semana_epidemio_dia.csv")
leitos <- bind_rows(leitos_antigos,leitos_novos) %>%
left_join(semana_epidemio, by = c("data_atualizacao" = "dia"))
View(dados_covid_poa)
runApp()
shiny::runApp()
names(ses_reserva)
View(mapa_poa)
names(mapa_poa)
mapa_poa$DATA_EDICA
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
?numberColor
runApp()
runApp()
x=c(1500,1800,1985, 5400)
mean(x)
median(x)
0.5*0.9+.3*.9+.2*.8
0.5*.9
0.45/0.88
.2*.8
0.16/0.88
x=c(13,14,15,16,17)
y=c(5,6,4,1,3)
x*y
sum(x*y)/sum(y)
x=c(rep(13,5))
x
x=c(13,14,15,16,17)
amostra=rep(x, y)
amostra
sd(amostra)
mean(amostra)
median(amostra)
x=c(3,5,7,9,11)
k=9
frequencia=c(3,k,10,3*-12,3)
amostra=rep(x, frequencia)
frequencia
frequencia=c(3,k,10,3*k-12,3)
frequencia
k
x
frequencia
amostra=rep(x, frequencia)
mean(amostra)
sd(amostra)
median(amostra)
calculando_esperanca = function(p){
esperanca_calculando = dbinom(0, 10, p)*10+dbinom(1, 10, p)*8+dbinom(2, 10, p)*6+dbinom(3, 10, p)*6+ + pbinom(3, 10, p, lower.tail = FALSE)*2
return(esperanca_calculando)
}
p=seq(0.01, 0.05, by=0.005)
p
calculando_esperanca(p)
calculando_esperanca(0.05)
x=c(3,5,7,9,11)
k=9
frequencia=c(3,k,10,3*-12,3)
amostra=rep(x, frequencia)
x=c(3,5,7,9,11)
k=9
frequencia=c(3,k,10,3*k-12,3)
amostra=rep(x, frequencia)
mean(amostra)
sd(amostra)
median(amostra)
max(frequencia)
which(max(frequencia))
which(max(frequencia))
which(frequencia==max(frequencia))
x(a)
a=which(frequencia==max(frequencia))
x(a)
x[a]
x=c(3,5,7,9,11)
k=9
frequencia=c(3,k,10,3*k-12,3)
amostra=rep(x, frequencia)
mean(amostra)
sd(amostra)
median(amostra)
a=which(frequencia==max(frequencia))
x[a]
k=6
x=c(3,5,7,9,11)
k=6
frequencia=c(3,k,10,3*k-12,3)
amostra=rep(x, frequencia)
mean(amostra)
sd(amostra)
median(amostra)
a=which(frequencia==max(frequencia))
x[a]
x=c(3,5,7,9,11)
k=7
frequencia=c(3,k,10,3*k-12,3)
amostra=rep(x, frequencia)
mean(amostra)
sd(amostra)
median(amostra)
a=which(frequencia==max(frequencia))
x[a]
x=c(3,5,7,9,11)
k=8
frequencia=c(3,k,10,3*k-12,3)
amostra=rep(x, frequencia)
mean(amostra)
sd(amostra)
median(amostra)
a=which(frequencia==max(frequencia))
x[a]
x=c(3,5,7,9,11)
k=6
frequencia=c(3,k,10,3*k-12,3)
amostra=rep(x, frequencia)
mean(amostra)
sd(amostra)
median(amostra)
a=which(frequencia==max(frequencia))
x[a]
x=c(3,5,7,9,11)
k=7
frequencia=c(3,k,10,3*k-12,3)
amostra=rep(x, frequencia)
mean(amostra)
sd(amostra)
median(amostra)
a=which(frequencia==max(frequencia))
x[a]
x=c(3,5,7,9,11)
k=6
frequencia=c(3,k,10,3*k-12,3)
amostra=rep(x, frequencia)
mean(amostra)
sd(amostra)
median(amostra)
a=which(frequencia==max(frequencia))
x[a]
x=c(3,5,7,9,11)
k=7
frequencia=c(3,k,10,3*k-12,3)
amostra=rep(x, frequencia)
mean(amostra)
sd(amostra)
median(amostra)
a=which(frequencia==max(frequencia))
x[a]
x=c(3,5,7,9,11)
k=8
frequencia=c(3,k,10,3*k-12,3)
amostra=rep(x, frequencia)
mean(amostra)
sd(amostra)
median(amostra)
a=which(frequencia==max(frequencia))
x[a]
x=c(3,5,7,9,11)
k=9
frequencia=c(3,k,10,3*k-12,3)
amostra=rep(x, frequencia)
mean(amostra)
sd(amostra)
median(amostra)
a=which(frequencia==max(frequencia))
x[a]
x=c(3,5,7,9,11)
k=6
frequencia=c(3,k,10,3*k-12,3)
amostra=rep(x, frequencia)
mean(amostra)
sd(amostra)
median(amostra)
a=which(frequencia==max(frequencia))
x[a]
x=c(3,5,7,9,11)
k=6
frequencia=c(3,k,10,3*k-12,3)
amostra=rep(x, frequencia)
mean(amostra)
sd(amostra)
median(amostra)
a=which(frequencia==max(frequencia))
x[a]
x=c(3,5,7,9,11)
k=7
frequencia=c(3,k,10,3*k-12,3)
amostra=rep(x, frequencia)
mean(amostra)
sd(amostra)
median(amostra)
a=which(frequencia==max(frequencia))
x[a]
x=c(3,5,7,9,11)
k=8
frequencia=c(3,k,10,3*k-12,3)
amostra=rep(x, frequencia)
mean(amostra)
sd(amostra)
median(amostra)
a=which(frequencia==max(frequencia))
x[a]
x=c(3,5,7,9,11)
k=8
frequencia=c(3,k,10,3*k-12,3)
amostra=rep(x, frequencia)
mean(amostra)
sd(amostra)
median(amostra)
a=which(frequencia==max(frequencia))
x[a]
x=c(3,5,7,9,11)
k=9
frequencia=c(3,k,10,3*k-12,3)
amostra=rep(x, frequencia)
mean(amostra)
sd(amostra)
median(amostra)
a=which(frequencia==max(frequencia))
x[a]
x=c(3,5,7,9,11)
k=5
frequencia=c(3,k,10,3*k-12,3)
amostra=rep(x, frequencia)
mean(amostra)
sd(amostra)
median(amostra)
a=which(frequencia==max(frequencia))
x[a]
200/12
16.66*12
16.66*8
16.66*7
shiny::runApp()
cor <- ifelse(porcentagem_diff < 0 , "green", "red")
porcentagem_diff = 5
cor <- ifelse(porcentagem_diff < 0 , "green", "red")
cor
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
